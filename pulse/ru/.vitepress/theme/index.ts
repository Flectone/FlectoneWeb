import {h} from 'vue';
import type {Theme} from 'vitepress';
import DefaultTheme from 'vitepress/theme';
import './style.css';

import {
    LayoutMode,
    NolebaseEnhancedReadabilitiesMenu,
    NolebaseEnhancedReadabilitiesPlugin,
    NolebaseEnhancedReadabilitiesScreenMenu,
    SpotlightStyle,
} from '@nolebase/vitepress-plugin-enhanced-readabilities/client'

import '@nolebase/vitepress-plugin-enhanced-readabilities/client/style.css'

import {NolebaseInlineLinkPreviewPlugin,} from '@nolebase/vitepress-plugin-inline-link-preview/client'

import '@nolebase/vitepress-plugin-inline-link-preview/client/style.css'

import AuthorsComponent from "./author/PageAuthors.vue"

const EMOJI_MAP = {
    tip: 'üí°',
    info: '‚ÑπÔ∏è',
    warning: '‚ö†Ô∏è',
    danger: 'üî•',
    details: 'üìú',
} as const;

const YAML_CLASS = 'language-yaml';
const HIGHLIGHT_CLASS = 'hash-highlight';
let isHandlerAttached = false;

const postRenderTasks = () => {
    if (import.meta.env.SSR) return;

    injectEmojis();
    highlightHashElement();
    processYamlBlocks();
};

function injectEmojis() {
    const processBlock = (block: Element, emoji: string) => {
        const title = block.querySelector('.custom-block-title, summary') as HTMLElement | null;
        if (!title || title.dataset.emojiAdded) return;

        title.dataset.emojiAdded = 'true';
        title.insertAdjacentHTML('afterbegin', `${emoji} `);
    };

    Object.entries(EMOJI_MAP).forEach(([type, emoji]) => {
        const selector = type === 'details' ? 'details.custom-block.details' : `.custom-block.${type}`;
        document.querySelectorAll(selector).forEach((block) => {
            processBlock(block, emoji);
        });
    });
}

function highlightHashElement() {
    if (import.meta.env.SSR) return;

    document.querySelectorAll(`.${HIGHLIGHT_CLASS}`).forEach((el) => {
        el.classList.remove(HIGHLIGHT_CLASS);
    });

    const hash = decodeURIComponent(window.location.hash);
    if (!hash) return;

    const target = document.querySelector(hash);
    if (!target) return;

    target.classList.add(HIGHLIGHT_CLASS);

    const header = document.querySelector('.VPNavBar') as HTMLElement | null;
    const headerHeight = header?.offsetHeight || 60;
    const targetPosition = target.getBoundingClientRect().top + window.scrollY - headerHeight;

    window.scrollTo({
        top: targetPosition,
        behavior: 'smooth',
    });
}

function processYamlBlocks() {
    if (import.meta.env.SSR) return;

    document.querySelectorAll<HTMLPreElement>(`div[class*="${YAML_CLASS}"] pre`).forEach((pre) => {
        pre.classList.add('yaml-lines');

        pre.querySelectorAll('.line').forEach((line) => {
            if (line.querySelector('.line-content')) return;

            const wrapper = document.createElement('span');
            wrapper.className = 'line-content';
            wrapper.innerHTML = line.innerHTML;
            line.innerHTML = '';
            line.appendChild(wrapper);
        });
    });
}

const scheduleTask = (fn: () => void) => {
    if (import.meta.env.SSR) {
        fn();
    } else {
        requestAnimationFrame(fn);
    }
};

export default {
    extends: DefaultTheme,

    Layout: () => h(DefaultTheme.Layout, null, {
        'nav-bar-content-after': () => h(NolebaseEnhancedReadabilitiesMenu),
        'nav-screen-content-after': () => h(NolebaseEnhancedReadabilitiesScreenMenu),
        'page-after': () => scheduleTask(postRenderTasks),
        "aside-outline-after": () => h(AuthorsComponent),
    }),

    enhanceApp({ app, router }) {
        app.use(NolebaseEnhancedReadabilitiesPlugin, {
            locales: {
                'ru-RU': {
                    title: {
                        title: '–†–µ–∂–∏–º —á—Ç–µ–Ω–∏—è',
                        titleAriaLabel: '–†–µ–∂–∏–º —á—Ç–µ–Ω–∏—è'
                    },
                    layoutSwitch: {
                        title: '–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–∞–∫–µ—Ç–∞',
                        titleAriaLabel: '–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–∞–∫–µ—Ç–∞',
                        titleHelpMessage: '–ù–∞—Å—Ç—Ä–æ–π—Ç–µ —à–∏—Ä–∏–Ω—É –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∏ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏',
                        titleScreenNavWarningMessage: '–ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–µ –º–µ–Ω—é –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–∫—Ä—ã—Ç–æ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –º–∞–∫–µ—Ç–∞',

                        optionFullWidth: '–ü–æ–ª–Ω–∞—è —à–∏—Ä–∏–Ω–∞',
                        optionFullWidthAriaLabel: '–ü–æ–ª–Ω–∞—è —à–∏—Ä–∏–Ω–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∏ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏',
                        optionFullWidthHelpMessage: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Ä–∞—Å—à–∏—Ä—è–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç –∏ –±–æ–∫–æ–≤—É—é –ø–∞–Ω–µ–ª—å',

                        optionSidebarWidthAdjustableOnly: '–¢–æ–ª—å–∫–æ –±–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å',
                        optionSidebarWidthAdjustableOnlyAriaLabel: '–†–µ–≥—É–ª–∏—Ä—É–µ–º–∞—è —Ç–æ–ª—å–∫–æ –±–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å',
                        optionSidebarWidthAdjustableOnlyHelpMessage: '–†–µ–≥—É–ª–∏—Ä—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —à–∏—Ä–∏–Ω–∞ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏',

                        optionBothWidthAdjustable: '–û–±–µ —Ä–µ–≥—É–ª–∏—Ä—É–µ–º—ã–µ',
                        optionBothWidthAdjustableAriaLabel: '–†–µ–≥—É–ª–∏—Ä—É–µ–º—ã–µ –∫–æ–Ω—Ç–µ–Ω—Ç –∏ –±–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å',
                        optionBothWidthAdjustableHelpMessage: '–†–µ–≥—É–ª–∏—Ä—É–µ—Ç—Å—è —à–∏—Ä–∏–Ω–∞ –∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∏ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏',

                        optionOriginalWidth: '–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∞—è —à–∏—Ä–∏–Ω–∞',
                        optionOriginalWidthAriaLabel: '–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∞—è —à–∏—Ä–∏–Ω–∞ –º–∞–∫–µ—Ç–∞',
                        optionOriginalWidthHelpMessage: '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —à–∏—Ä–∏–Ω–∞ –∫–∞–∫ –≤ VitePress',

                        contentLayoutMaxWidth: {
                            title: '–ú–∞–∫—Å. —à–∏—Ä–∏–Ω–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞',
                            titleAriaLabel: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —à–∏—Ä–∏–Ω–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞',
                            titleHelpMessage: '–†–µ–≥—É–ª–∏—Ä–æ–≤–∫–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —à–∏—Ä–∏–Ω—ã –æ–±–ª–∞—Å—Ç–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞',
                            titleScreenNavWarningMessage: '–ù–∞–≤–∏–≥–∞—Ü–∏—è –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–∫—Ä—ã—Ç–∞ –ø—Ä–∏ —É–≤–µ–ª–∏—á–µ–Ω–∏–∏ —à–∏—Ä–∏–Ω—ã',
                            slider: '–®–∏—Ä–∏–Ω–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞',
                            sliderAriaLabel: '–†–µ–≥—É–ª–∏—Ä–æ–≤–∫–∞ —à–∏—Ä–∏–Ω—ã –∫–æ–Ω—Ç–µ–Ω—Ç–∞',
                            sliderHelpMessage: '–ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —à–∏—Ä–∏–Ω—ã –∫–æ–Ω—Ç–µ–Ω—Ç–∞'
                        },

                        pageLayoutMaxWidth: {
                            title: '–ú–∞–∫—Å. —à–∏—Ä–∏–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã',
                            titleAriaLabel: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —à–∏—Ä–∏–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã',
                            titleHelpMessage: '–†–µ–≥—É–ª–∏—Ä–æ–≤–∫–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —à–∏—Ä–∏–Ω—ã –≤—Å–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã',
                            titleScreenNavWarningMessage: '–ù–∞–≤–∏–≥–∞—Ü–∏—è –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–∫—Ä—ã—Ç–∞ –ø—Ä–∏ —É–≤–µ–ª–∏—á–µ–Ω–∏–∏ —à–∏—Ä–∏–Ω—ã',
                            slider: '–®–∏—Ä–∏–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã',
                            sliderAriaLabel: '–†–µ–≥—É–ª–∏—Ä–æ–≤–∫–∞ —à–∏—Ä–∏–Ω—ã —Å—Ç—Ä–∞–Ω–∏—Ü—ã',
                            sliderHelpMessage: '–ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —à–∏—Ä–∏–Ω—ã –≤—Å–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã'
                        }
                    },
                    spotlight: {
                        title: '–ü–æ–¥—Å–≤–µ—Ç–∫–∞',
                        titleAriaLabel: '–†–µ–∂–∏–º –ø–æ–¥—Å–≤–µ—Ç–∫–∏',
                        titleHelpMessage: '–ü–æ–¥—Å–≤–µ—á–∏–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–π –∞–±–∑–∞—Ü –¥–ª—è –ª—É—á—à–µ–π —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏',
                        titleScreenNavWarningMessage: '–ù–∞–≤–∏–≥–∞—Ü–∏—è –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–∫—Ä—ã—Ç–∞ –ø—Ä–∏ –≤–∫–ª—é—á–µ–Ω–Ω–æ–π –ø–æ–¥—Å–≤–µ—Ç–∫–µ',

                        optionOn: '–í–∫–ª—é—á–∏—Ç—å',
                        optionOnAriaLabel: '–í–∫–ª—é—á–∏—Ç—å –ø–æ–¥—Å–≤–µ—Ç–∫—É',
                        optionOnHelpMessage: '–ê–∫—Ç–∏–≤–∏—Ä—É–µ—Ç —Ä–µ–∂–∏–º –ø–æ–¥—Å–≤–µ—Ç–∫–∏',

                        optionOff: '–í—ã–∫–ª—é—á–∏—Ç—å',
                        optionOffAriaLabel: '–í—ã–∫–ª—é—á–∏—Ç—å –ø–æ–¥—Å–≤–µ—Ç–∫—É',
                        optionOffHelpMessage: '–î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç —Ä–µ–∂–∏–º –ø–æ–¥—Å–≤–µ—Ç–∫–∏',

                        styles: {
                            title: '–°—Ç–∏–ª—å –ø–æ–¥—Å–≤–µ—Ç–∫–∏',
                            titleAriaLabel: '–°—Ç–∏–ª—å –ø–æ–¥—Å–≤–µ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞',
                            titleHelpMessage: '–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∏–ª—å –ø–æ–¥—Å–≤–µ—Ç–∫–∏ —Ç–µ–∫—É—â–µ–≥–æ –∞–±–∑–∞—Ü–∞',
                            titleScreenNavWarningMessage: '–ù–∞–≤–∏–≥–∞—Ü–∏—è –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–∫—Ä—ã—Ç–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∏–ª—è –ø–æ–¥—Å–≤–µ—Ç–∫–∏',

                            optionUnder: '–ü–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ',
                            optionUnderAriaLabel: '–ü–æ–¥—Å–≤–µ—Ç–∫–∞ –≤ –≤–∏–¥–µ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è',
                            optionUnderHelpMessage: '–ü–æ–¥—Å–≤–µ—á–∏–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ–º',

                            optionAside: '–ë–æ–∫–æ–≤–∞—è –ø–æ–ª–æ—Å–∞',
                            optionAsideAriaLabel: '–ü–æ–¥—Å–≤–µ—Ç–∫–∞ –≤ –≤–∏–¥–µ –±–æ–∫–æ–≤–æ–π –ø–æ–ª–æ—Å—ã',
                            optionAsideHelpMessage: '–ü–æ–¥—Å–≤–µ—á–∏–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç –±–æ–∫–æ–≤–æ–π –ø–æ–ª–æ—Å–æ–π'
                        }
                    },
                }
            },
            layoutSwitch: {
                disableHelp: false,
                defaultMode: LayoutMode.BothWidthAdjustable,
                contentLayoutMaxWidth: {
                    disableHelp: false,
                    defaultMaxWidth: 100
                },
                pageLayoutMaxWidth: {
                    disableHelp: false,
                    defaultMaxWidth: 100
                }
            },
            spotlight: {
                disableHelp: false,
                hoverBlockColor: 'rgb(240 197 52 / 10%)',
                defaultToggle: true,
                defaultStyle: SpotlightStyle.Aside,
            }
        });

        app.use(NolebaseInlineLinkPreviewPlugin, {
            popupWidth: 800,
            popupHeight: 400,
            locales: {
                'ru-RU': {
                    popup: {
                        loading: '–ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–µ–≤—å—é...',
                        loadingAriaLabel: '–ü—Ä–µ–≤—å—é —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è',
                        openInCurrentPage: '–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É',
                        openInCurrentPageAriaLabel: '–û—Ç–∫—Ä—ã—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª —Å—Ç—Ä–∞–Ω–∏—Ü—ã',
                        iframeAriaLabel: '–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Å–≤—è–∑–∞–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã'
                    }
                },
            }
        });

        app.provide('post-render', postRenderTasks);

        router.onAfterRouteChanged = () => {
            scheduleTask(postRenderTasks);
        };

        if (!isHandlerAttached && !import.meta.env.SSR) {
            window.addEventListener('hashchange', highlightHashElement);
            document.addEventListener('click', (e) => {
                const target = e.target as HTMLElement;
                if (target.closest('.header-anchor, a[href^="#"]')) {
                    scheduleTask(highlightHashElement);
                }
            });
            isHandlerAttached = true;
        }
    },

} satisfies Theme;